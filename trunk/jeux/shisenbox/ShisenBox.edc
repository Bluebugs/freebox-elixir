images {
 image: "background.png" COMP;
 image: "logo_accueil.png" COMP;
 image: "bt_jouer.png" COMP;
 image: "bt_jouer_mouse.png" COMP;
 image: "bt_quitter.png" COMP;
 image: "rock_n_roll.png" COMP;
 image: "game_over.png" COMP;
 image: "game_over_won.png" COMP;
 image: "game_over_lost.png" COMP;
 
#define TILEIMAGE(tile_name) \
	image: tile_name".png" COMP;

#define TILEIMAGECOL(col_name) \
 TILEIMAGE(col_name"1");  \
 TILEIMAGE(col_name"2");  \
 TILEIMAGE(col_name"3");  \
 TILEIMAGE(col_name"4");  \
 TILEIMAGE(col_name"5");  \
 TILEIMAGE(col_name"6");  \
 TILEIMAGE(col_name"7");  \
 TILEIMAGE(col_name"8");  \
 TILEIMAGE(col_name"9");

 TILEIMAGECOL("b");
 TILEIMAGECOL("p");
 TILEIMAGECOL("n");

 TILEIMAGE("t1");
 TILEIMAGE("t2");
 TILEIMAGE("c");
 TILEIMAGE("p");
 TILEIMAGE("f");
 TILEIMAGE("bamboo");
 TILEIMAGE("plum");
 TILEIMAGE("orchid");
 TILEIMAGE("mum");

 TILEIMAGE("cx_h");
 TILEIMAGE("cx_v");
 TILEIMAGE("cx_hg");
 TILEIMAGE("cx_hd");
 TILEIMAGE("cx_bg");
 TILEIMAGE("cx_bd");
 TILEIMAGE("cx_left");
 TILEIMAGE("cx_right");
 TILEIMAGE("cx_up");
 TILEIMAGE("cx_down");

 TILEIMAGE("frame");
}

collections {
  group {
    name, "menu";
    min, 720 576;
    max, 720 576;

    script {
      public btn;
      public hof;

      public update_btn(btnarg) {
	if (btnarg == 0) {
	  if (get_int(btn) == 0) {
	    set_state(PART:"btn/jouer/rc", "mid", 0.0);
	    set_state(PART:"btn/jouer/mouse", "mid", 0.0);
	    emit("menu,jouer,stop", "edc");
	    emit("menu,jouer,mouse,stop", "edc");
	    emit("menu,quitter", "edc");
	    set_int(btn, 2);
	  } else if (get_int(btn) == 1) {
	    set_state(PART:"btn/jouer/mouse", "mid", 0.0);
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,jouer,rc", "edc");
	    emit("menu,jouer,mouse,stop", "edc");
	    emit("menu,quitter,stop", "edc");
	    set_int(btn, 0);
	  } else if (get_int(btn) == 2) {
	    set_state(PART:"btn/jouer/rc", "mid", 0.0);
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,jouer,stop", "edc");
	    emit("menu,jouer,mouse", "edc");
	    emit("menu,quitter,stop", "edc");
	    set_int(btn, 1);
	  } else {
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,quitter,stop", "edc");
	    emit("menu,jouer,rc", "edc");
	    set_int(btn, 0);
	  }
	} else if (btnarg == 1) {
	  if (get_int(btn) == 1) {
	    set_state(PART:"btn/jouer/rc", "mid", 0.0);
	    set_state(PART:"btn/jouer/mouse", "mid", 0.0);
	    emit("menu,jouer,stop", "edc");
	    emit("menu,jouer,mouse,stop", "edc");
	    emit("menu,quitter", "edc");
	    set_int(btn, 2);
	  } else if (get_int(btn) == 2) {
	    set_state(PART:"btn/jouer/mouse", "mid", 0.0);
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,jouer,rc", "edc");
	    emit("menu,jouer,mouse,stop", "edc");
	    emit("menu,quitter,stop", "edc");
	    set_int(btn, 0);
	  } else if (get_int(btn) == 0) {
	    set_state(PART:"btn/jouer/rc", "mid", 0.0);
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,jouer,stop", "edc");
	    emit("menu,jouer,mouse", "edc");
	    emit("menu,quitter,stop", "edc");
	    set_int(btn, 1);
	  } else {
	    set_state(PART:"btn/quitter", "mid", 0.0);
	    emit("menu,quitter,stop", "edc");
	    emit("menu,jouer,rc", "edc");
	    set_int(btn, 0);
	  }
	} else {
	  emit("menu,background,appear", "edc");
	  set_int(btn, 0);
	}
      }

      public message(Msg_Type:type, id, ...) {
	if (type == MSG_INT) {
	  if (id == 1) {
	    update_btn(getarg(2));
	  } else if (id == 2) {
	    emit("menu,jouer,rc,disappear", "edc");
	  } else if (id == 3) {
	    hof = getarg(2);
	    if (hof == 1)
	      send_message(MSG_INT, 1, get_int(btn));
	    else
	      send_message(MSG_INT, 1, 3);
	  } else if (id == 4) {
	    emit("menu,background,disappear,quit", "edc");
	  } else if (id == 5) {
	    emit("menu,background,disappear,hof", "edc");
	  }
	}
      }
    }

    parts {
      part {
	name, "background";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1.relative, 0.0 0.0;
	  rel2.relative, 1.0 1.0;

	  image {
	    normal, "background.png";
	  }

	  color, 0 0 0 0;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 255 255 255;
	}
      }

      part {
	name, "logo_accueil";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1.relative, 0.0 0.0;
	  rel2.relative, 1.0 1.0;

	  image {
	    normal, "logo_accueil.png";
	  }

	  color, 0 0 0 0;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 255 255 255;
	}
      }

      part {
	name, "btn/jouer/rc";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1 {
	    relative, 0.05 0.05;
	    offset, 0 0;
	  }

	  rel2 {
	    relative, 0.05 0.05;
	    offset, 268 68;
	  }

	  image {
	    normal, "bt_jouer.png";
	  }

	  color, 0 0 0 0;
	}

	description {
	  state, "mid" 0.0;
	  inherit, "default" 0.0;
	  color, 168 168 168 168;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 255 255 255;
	}
      }

      part {
	name, "btn/jouer/mouse";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1 {
	    relative, 0.05 0.2;
	    offset, 0 0;
	  }

	  rel2 {
	    relative, 0.05 0.2;
	    offset, 268 68;
	  }

	  image {
	    normal, "bt_jouer_mouse.png";
	  }

	  color, 0 0 0 0;
	}

	description {
	  state, "mid" 0.0;
	  inherit, "default" 0.0;
	  color, 168 168 168 168;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 255 255 255;
	}
      }

      part {
	name, "btn/quitter";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1 {
	    relative, 0.95 0.95;
	    offset, -268 -68;
	  }
	  rel2 {
	    relative, 0.95 0.95;
	    offset, 0 0;
	  }
	  image {
	    normal, "bt_quitter.png";

	  }

	  color, 0 0 0 0;
	}

	description {
	  state, "mid" 0.0;
	  inherit, "default" 0.0;
	  color, 168 168 168 168;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 255 255 255;
	}
      }
    }

    programs {
      program {
	name, "menu_disappeared";
	action, SIGNAL_EMIT "menu_disappeared" "edc";
      }

      program {
	name, "background_disappeared";
	action, SIGNAL_EMIT "background_disappeared_quit" "edc";
      }

      program {
	name, "background_disappeared/hof";
	action, SIGNAL_EMIT "background_disappeared_hof" "edc";
      }

      program {
	name, "animate_background/appear";
	signal, "menu,background,appear";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, LINEAR 0.4;
	target, "background";
	after, "animate_logo_accueil/appear";
      }
      program {
	name, "animate_background/disappear/quit";
	signal, "menu,background,disappear,quit";
	source, "edc";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "background";
	after, "background_disappeared";
      }
      program {
	name, "animate_background/disappear/hof";
	signal, "menu,background,disappear,hof";
	source, "edc";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "background";
	after, "background_disappeared/hof";
      }

      program {
	name, "animate_logo_accueil/appear";
	action, STATE_SET "focus" 0.0;
	transition, LINEAR 0.4;
	target, "logo_accueil";
	after, "animate_btn_jouer/appear";
      }
      program {
	name, "animate_logo_accueil/disappear";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "logo_accueil";
	after, "menu_disappeared";
      }

      program {
	name, "animate_btn_jouer/appear";
	signal, "menu,jouer,rc,appear";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, LINEAR 0.4;
	target, "btn/jouer/rc";
	after, "animate_btn_jouer_mouse/appear";
      }
      program {
	name, "animate_btn_jouer_mouse/appear";
	signal, "menu,jouer,mouse,appear";
	source, "edc";
	action, STATE_SET "mid" 0.0;
	transition, LINEAR 0.4;
	target, "btn/jouer/mouse";
	after, "animate_btn_quitter/appear";
      }
      program {
	name, "animate_btn_jouer/disappear";
	signal, "menu,jouer,rc,disappear";
	source, "edc";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "btn/jouer/rc";
	after, "animate_btn_jouer_mouse/disappear";
      }
      program {
	name, "animate_btn_jouer_mouse/disappear";
	signal, "menu,jouer,mouse,disappear";
	source, "edc";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "btn/jouer/mouse";
	after, "animate_btn_quitter/disappear";
      }
      program {
	name, "animate_btn_jouer";
	signal, "menu,jouer,rc";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/rc";
	after, "animate_btn_jouer/back";
      }
      program {
	name, "animate_btn_jouer/back";
	action, STATE_SET "mid" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/rc";
	after, "animate_btn_jouer";
      }
      program {
	name, "animate_btn_jouer/change";
	signal, "menu,jouer,rc";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/rc";
	after, "animate_btn_jouer/back";
      }
      program {
	name, "animate_btn_jouer/stop";
	signal, "menu,jouer,stop";
	source, "edc";
	action, ACTION_STOP;
	target, "animate_btn_jouer";
      }
      program {
	name, "animate_btn_jouer_mouse";
	signal, "menu,jouer,mouse";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/mouse";
	after, "animate_btn_jouer_mouse/back";
      }
      program {
	name, "animate_btn_jouer_mouse/back";
	action, STATE_SET "mid" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/mouse";
	after, "animate_btn_jouer_mouse";
      }
      program {
	name, "animate_btn_jouer_mouse/change";
	signal, "menu,jouer,mouse";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/jouer/mouse";
	after, "animate_btn_jouer_mouse/back";
      }
      program {
	name, "animate_btn_jouer_mouse/stop";
	signal, "menu,jouer,mouse,stop";
	source, "edc";
	action, ACTION_STOP;
	target, "animate_btn_jouer_mouse";
      }
      program {
	name, "animate_btn_quitter/appear";
	signal, "menu,quitter,appear";
	source, "edc";
	action, STATE_SET "mid" 0.0;
	transition, LINEAR 0.4;
	target, "btn/quitter";
	after, "animate_btn_jouer";
      }
      program {
	name, "animate_btn_quitter/disappear";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "btn/quitter";
	after, "animate_logo_accueil/disappear";
      }
      program {
	name, "animate_btn_quitter";
	signal, "menu,quitter";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/quitter";
	after, "animate_btn_quitter/back";
      }
      program {
	name, "animate_btn_quitter/back";
	action, STATE_SET "mid" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/quitter";
	after, "animate_btn_quitter";
      }
      program {
	name, "animate_btn_quitter/change";
	signal, "menu,quitter";
	source, "edc";
	action, STATE_SET "focus" 0.0;
	transition, SINUSOIDAL 0.4;
	target, "btn/quitter";
	after, "animate_btn_quitter/back";
      }
      program {
	name, "animate_btn_quitter/stop";
	signal, "menu,quitter,stop";
	source, "edc";
	action, ACTION_STOP;
	target, "animate_btn_quitter";
      }
    }
  }

  group {
    name, "game";
    min, 720 576;
    max, 720 576;

    parts {
      part {
	name, "background";
	type, IMAGE;

	description {
	  state, "default" 0.0;

	  rel1.relative, 0.0 0.0;
	  rel2.relative, 1.0 1.0;

	  image {
	    normal, "background.png";
	  }

	  color, 255 255 255 255;
	}
      }

      part {
	name, "time";
	type, TEXT;
	effect, SOFT_SHADOW;
	mouse_events, 0;
	description {
	  state, "default" 0.0;
	  color, 0 0 0 0;
	  text {
	    font, "Vera";
	    text, "Temps :";
	    size, 18;
	    align, 0.0 0.5;
	  }
	  rel1.relative, 0.0 0.0;
	  rel1.offset, 50 500;
	  rel2.relative, 0.0 0.0;
	  rel2.offset, 350 570;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 100 100 255;
	}
      }

      part {
	name, "best_time";
	type, TEXT;
	effect, SOFT_SHADOW;
	mouse_events, 0;
	description {
	  state, "default" 0.0;
	  color, 0 0 0 0;
	  text {
	    font, "Vera";
	    text, "Meilleur temps :";
	    size, 18;
	    align, 1.0 0.5;
	  }
	  rel1.relative, 0.0 0.0;
	  rel1.offset, 360 500;
	  rel2.relative, 0.0 0.0;
	  rel2.offset, 670 570;
	}

	description {
	  state, "focus" 0.0;
	  inherit, "default" 0.0;
	  color, 255 100 100 255;
	}
      }
    }

    programs {
      program {
	name, "animate_time/appear";
	signal, "play,time,appear";
	source, "js";
	action, STATE_SET "focus" 0.0;
	transition, LINEAR 0.4;
	target, "time";
      }
      program {
	name, "animate_time/disappear";
	signal, "play,time,disappear";
	source, "js";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "time";
      }
      program {
	name, "animate_best_time/appear";
	signal, "play,best_time,appear";
	source, "js";
	action, STATE_SET "focus" 0.0;
	transition, LINEAR 0.4;
	target, "best_time";
      }
      program {
	name, "animate_best_time/disappear";
	signal, "play,best_time,disappear";
	source, "js";
	action, STATE_SET "default" 0.0;
	transition, LINEAR 0.4;
	target, "best_time";
      }
    }
  }
      
  group {
    name, "image_text";
    min, 720 576;
    max, 720 576;

    parts {
      part {
	name, "image_text";
	type, IMAGE;
	mouse_events, 0;
	description {
	  state, "default" 0.0;
	  image.normal, "rock_n_roll.png";
	  rel1.relative, 0.5 0.5;
	  rel2.relative, 0.5 0.5;
	  fixed, 1 1;
	  align, 0.5 0.5;
	  visible, 0;
	}
	description {
	  state, "start" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "rock_n_roll.png";
	  min, 363 46;
	  max, 363 46;
	  visible, 1;
	}
	description {
	  state, "start/hidden" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "rock_n_roll.png";
	  visible, 1;
	}
	description {
	  state, "over" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over.png";
	  min, 478 68;
	  max, 478 68;
	  visible, 1;
	}
	description {
	  state, "over/hidden" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over.png";
	  visible, 1;
	}
	description {
	  state, "won" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over_won.png";
	  min, 478 68;
	  max, 478 68;
	  visible, 1;
	}
	description {
	  state, "won/hidden" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over_won.png";
	  visible, 1;
	}
	description {
	  state, "lost" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over_lost.png";
	  min, 478 68;
	  max, 478 68;
	  visible, 1;
	}
	description {
	  state, "lost/hidden" 0.0;
	  inherit, "default" 0.0;
	  image.normal, "game_over_lost.png";
	  visible, 1;
	}
      }
    }
  
    programs {
      program {
	name, "default";
	signal, "default";
	source, "js";
	action, STATE_SET "default" 0.0;
	target, "image_text";
      }
	   
#define EVENT_PROG(Event)                         \
      program {                                   \
        name, Event;                              \
        signal, Event;                            \
        source, "js";                             \
        action, STATE_SET Event"/hidden" 0.0;     \
        target, "image_text";                     \
        after, Event"/2";                         \
      }                                           \
      program {                                   \
        name, Event"/2";                          \
        signal, Event"/2";                        \
        source, "js";                             \
        action, STATE_SET Event 0.0;              \
        transition, SINUSOIDAL 1.0;               \
        target, "image_text";                     \
        after, Event"/3";                         \
      }                                           \
      program {                                   \
        name, Event"/3";                          \
        signal, Event"/3";                        \
        source, "js";                             \
        action, STATE_SET Event 0.0;              \
        transition, LINEAR 1.0;                   \
        target, "image_text";                     \
        after, Event"/4";                         \
      }                                           \
      program {                                   \
        name, Event"/4";                          \
        signal, Event"/4";                        \
        source, "js";                             \
        action, STATE_SET Event"/hidden" 0.0;     \
        transition, SINUSOIDAL 1.0;               \
        target, "image_text";                     \
        after, Event"/5";                         \
      }                                           \
      program {                                   \
        name, Event"/5";                          \
        signal, Event"/5";                        \
        source, "js";                             \
       	action, SIGNAL_EMIT "im_text_end" "edc";  \
        after, "default";                         \
      }

      EVENT_PROG("start");
      EVENT_PROG("over");
      EVENT_PROG("won");
      EVENT_PROG("lost");
    }
  }

#define TILE(tile_name)					\
							\
  group {						\
    name, tile_name;					\
							\
    parts {						\
      part {						\
        name, tile_name"part";				\
        type, IMAGE;					\
							\
        description {					\
          state, "default" 0.0;				\
							\
          rel1.relative, 0.0 0.0;			\
          rel2.relative, 1.0 1.0;			\
							\
          image {					\
            normal, tile_name".png";			\
          }						\
							\
          color, 255 255 255 0;				\
        }						\
        description {					\
          state, "hidden" 0.0;				\
          inherit, "default" 0.0;			\
							\
          color, 0 0 0 0;				\
        }						\
        description {					\
          state, "mid" 0.0;				\
          inherit, "default" 0.0;			\
							\
          color, 168 168 168 168;			\
        }						\
        description {					\
          state, "plain" 0.0;				\
          inherit, "default" 0.0;			\
							\
          color, 255 255 255 255;			\
        }						\
      }							\
    }							\
							\
    programs {						\
      program {						\
        name, "animate_tile_"tile_name"/appear";	\
        signal, "play,tile,appear";			\
        source, "js";					\
        action, STATE_SET "plain" 0.0;			\
        transition, SINUSOIDAL 0.3;			\
        target, tile_name"part";			\
	after, "animate_tile_"tile_name"/appeared";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/appearfast";	\
        signal, "play,tile,appear,fast";		\
        source, "js";					\
        action, STATE_SET "plain" 1.0;			\
        target, tile_name"part";			\
	after, "animate_tile_"tile_name"/appeared";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/appearslow";	\
        signal, "play,tile,appear,slow";		\
        source, "js";					\
        action, STATE_SET "plain" 1.0;			\
        transition, SINUSOIDAL 0.6;			\
        target, tile_name"part";			\
	after, "animate_tile_"tile_name"/appeared";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/disappear";	\
        signal, "play,tile,disappear";			\
        source, "js";					\
        action, STATE_SET "default" 0.0;		\
        transition, SINUSOIDAL 0.2;			\
        target, tile_name"part";			\
	after, "animate_tile_"tile_name"/disappeared";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/disappearslow";	\
        signal, "play,tile,disappear,slow";		\
        source, "js";					\
        action, STATE_SET "default" 0.0;		\
        transition, SINUSOIDAL 0.6;			\
        target, tile_name"part";			\
	after, "animate_tile_"tile_name"/disappeared";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/disappeared";	\
	action, SIGNAL_EMIT "tile_disappeared" "edc";	\
      }							\
      program {						\
        name, "animate_tile_"tile_name"/appeared";	\
	action, SIGNAL_EMIT "tile_appeared" "edc";	\
      }							\
      program {						\
        name, "ghost_tile_"tile_name"/hidden";		\
        signal, "play,tile,ghost";			\
        source, "js";					\
        action, STATE_SET "hidden" 0.0;			\
        transition, SINUSOIDAL 0.25;			\
        target, tile_name"part";			\
	after, "ghost_tile_"tile_name"/done";		\
      }							\
      program {						\
        name, "ghost_tile_"tile_name"/done";		\
	action, SIGNAL_EMIT "tile_ghosted" "edc";	\
      }							\
      program {						\
        name, "unghost_tile_"tile_name"/hidden";	\
        signal, "play,tile,unghost";			\
        source, "js";					\
        action, STATE_SET "plain" 0.0;			\
        transition, SINUSOIDAL 0.25;			\
        target, tile_name"part";			\
	after, "unghost_tile_"tile_name"/done";		\
      }							\
      program {						\
        name, "unghost_tile_"tile_name"/done";		\
	action, SIGNAL_EMIT "tile_unghosted" "edc";	\
      }							\
      program {						\
        name, "blink_tile_"tile_name"/mid";		\
        signal, "play,tile,blink";			\
        source, "js";					\
        action, STATE_SET "mid" 0.0;			\
        transition, SINUSOIDAL 0.5;			\
        target, tile_name"part";			\
	after, "blink_tile_"tile_name"/plain";		\
      }							\
      program {						\
        name, "blink_tile_"tile_name"/plain";		\
        action, STATE_SET "plain" 0.0;			\
        transition, SINUSOIDAL 0.5;			\
        target, tile_name"part";			\
	after, "blink_tile_"tile_name"/mid";		\
      }							\
    }							\
  }

#define TILECOL(col_name) \
 TILE(col_name"1");  \
 TILE(col_name"2");  \
 TILE(col_name"3");  \
 TILE(col_name"4");  \
 TILE(col_name"5");  \
 TILE(col_name"6");  \
 TILE(col_name"7");  \
 TILE(col_name"8");  \
 TILE(col_name"9");

TILECOL("b");
TILECOL("p");
TILECOL("n");
  
TILE("t1");
TILE("t2");
TILE("c");
TILE("p");
TILE("f");
TILE("bamboo");
TILE("plum");
TILE("orchid");
TILE("mum");

TILE("cx_h");
TILE("cx_v");
TILE("cx_hg");
TILE("cx_hd");
TILE("cx_bg");
TILE("cx_bd");
TILE("cx_left");
TILE("cx_right");
TILE("cx_up");
TILE("cx_down");

TILE("frame");
